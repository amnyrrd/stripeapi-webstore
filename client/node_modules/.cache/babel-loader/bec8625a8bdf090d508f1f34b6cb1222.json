{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user-types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/Firebase.utils';\nimport { signInSuccess, signInFailure, emailSignInSuccess, emailSignInFailure } from './user-actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {} catch (error) {}\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/aaronminyard/Development/code/2020-react-course/ecommerce-project/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","signInSuccess","signInFailure","emailSignInSuccess","emailSignInFailure","getSnapshotFromUserAuth","userAuth","error","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,kBAAvC,EAA2DC,kBAA3D,QAAqF,gBAArF;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AACjD,MAAI,CAEH,CAFD,CAEE,OAAOC,KAAP,EAAc,CAEf;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,IAAI,CAACY,eAAL,CAAqBX,cAArB,CAAvB;AACA,UAAMY,OAAO,GAAG,MAAMf,IAAI,CAACI,yBAAD,EAA4BS,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMnB,GAAG,CACPO,aAAa,CAAC;AAAEa,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADN,CAAT;AAGD,GAPD,CAOE,OAAOR,KAAP,EAAc;AACd,UAAMb,GAAG,CACPQ,aAAa,CAACK,KAAD,CADN,CAAT;AAGD;AACF;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACrC,QAAMvB,UAAU,CAACI,eAAe,CAACoB,oBAAjB,EAAuCT,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUU,eAAV,CAA2B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA3B,EAA6D;AAClE,MAAI;AACF,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAMX,IAAI,CAACwB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMV,OAAO,GAAG,MAAMf,IAAI,CAACI,yBAAD,EAA4BS,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMnB,GAAG,CACPO,aAAa,CAAC;AAAEa,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADN,CAAT;AAGD,GAPD,CAOE,OAAOR,KAAP,EAAc;AACdb,IAAAA,GAAG,CAACQ,aAAa,CAACK,KAAD,CAAd,CAAH;AACD;AACF;AAED,OAAO,UAAUgB,kBAAV,GAA+B;AACpC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAsCN,eAAtC,CAAhB;AACD;AAID,OAAO,UAAUO,SAAV,GAAsB;AAC3B,QAAM9B,GAAG,CAAC,CAACC,IAAI,CAACoB,mBAAD,CAAL,EAA4BpB,IAAI,CAAC2B,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user-types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/Firebase.utils';\nimport { signInSuccess, signInFailure, emailSignInSuccess, emailSignInFailure } from './user-actions';\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    \n  } catch (error) {\n    \n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get(); \n    yield put(\n      signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    )\n  } catch (error) {\n    yield put(\n      signInFailure(error)\n    )\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* signInWithEmail( { payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(\n      signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    )\n  } catch (error) {\n    put(signInFailure(error))\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\n\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}"]},"metadata":{},"sourceType":"module"}