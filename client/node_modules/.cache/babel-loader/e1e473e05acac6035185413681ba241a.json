{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user-types';\nimport { googleSignInSuccess, googleSignInFailure } from './user-actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/aaronminyard/Development/code/2020-react-course/ecommerce-project/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","googleSignInSuccess","googleSignInFailure","signInWithGoogle","user","auth","signInWithPopup","googleProvider","userRef","createUserProfileDocument","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,gBAAzD;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMC,IAAI,CAACC,eAAL,CAAqBC,cAArB,CAAvB;AACA,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACU,yBAAD,EAA4BL,IAA5B,CAA1B;AACA,UAAMM,YAAY,GAAG,MAAMF,OAAO,CAACG,GAAR,EAA3B;AACA,UAAMd,GAAG,CACPI,mBAAmB,CAAC;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADZ,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMjB,GAAG,CACPK,mBAAmB,CAACY,KAAD,CADZ,CAAT;AAGD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMnB,UAAU,CAACI,eAAe,CAACgB,oBAAjB,EAAuCb,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUc,SAAV,GAAsB;AAC3B,QAAMnB,GAAG,CAAC,CAACC,IAAI,CAACgB,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user-types';\nimport { googleSignInSuccess, googleSignInFailure } from './user-actions';\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get(); \n    yield put(\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    )\n  } catch (error) {\n    yield put(\n      googleSignInFailure(error)\n    )\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}"]},"metadata":{},"sourceType":"module"}