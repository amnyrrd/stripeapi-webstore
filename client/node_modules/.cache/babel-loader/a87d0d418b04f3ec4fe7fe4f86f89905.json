{"ast":null,"code":"var _jsxFileName = \"/Users/aaronminyard/Development/code/2020-react-course/ecommerce-project/src/pages/shop/ShopPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionPage from '../collection/Collection';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport CollectionsOverviewContainer from '../../components/collections-overview/CollectionsOverviewContainer';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions';\nimport { selectIsCollectionFetching, selectAreCollectionsLoaded } from '../../redux/shop/shop-selector';\nimport { updateCollections } from '../../redux/shop/shop-actions';\nimport WithSpinner from '../../components/with-spinner/WithSpinner';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      areCollectionsLoaded\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: areCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !areCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  areCollectionsLoaded: selectAreCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/aaronminyard/Development/code/2020-react-course/ecommerce-project/src/pages/shop/ShopPage.js"],"names":["React","Component","connect","Route","createStructuredSelector","CollectionPage","CollectionsOverview","CollectionsOverviewContainer","fetchCollectionsStartAsync","selectIsCollectionFetching","selectAreCollectionsLoaded","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","props","render","match","areCollectionsLoaded","loading","state","path","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,4BAAP,MAAyC,oEAAzC;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,EAAqCC,0BAArC,QAAuE,gCAAvE;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACN,mBAAD,CAAlD;AACA,MAAMQ,yBAAyB,GAAGF,WAAW,CAACP,cAAD,CAA7C;;AAEA,MAAMU,QAAN,SAAuBd,SAAvB,CAAiC;AAC/Be,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAER,MAAAA;AAAF,QAAiC,KAAKS,KAA5C;AACAT,IAAAA,0BAA0B;AAC3B;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKH,KAA7C;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEH,KAAK,CAACI,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAGN,KAAD,iBACN,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAqEH,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACI,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGN,KAAD,iBACN,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACG;AAAvC,SAAiEH,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AA1B8B;;AA6BjC,MAAMO,eAAe,GAAGpB,wBAAwB,CAAC;AAC/CqB,EAAAA,oBAAoB,EAAEhB,0BADyB;AAE/CW,EAAAA,oBAAoB,EAAEV;AAFyB,CAAD,CAAhD;;AAKA,MAAMgB,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,0BAA0B,EAAE,MAAMmB,QAAQ,CAACnB,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIA,eAAeN,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionPage from '../collection/Collection';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport CollectionsOverviewContainer from '../../components/collections-overview/CollectionsOverviewContainer';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions';\nimport { selectIsCollectionFetching, selectAreCollectionsLoaded } from '../../redux/shop/shop-selector';\nimport { updateCollections } from '../../redux/shop/shop-actions';\nimport WithSpinner from '../../components/with-spinner/WithSpinner';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const { match, areCollectionsLoaded } = this.props;\n    const { loading } = this.state;\n    return (\n      <div className='shop-page'>\n        <Route\n          exact\n          path={`${match.path}`}\n          render={(props) => (\n            <CollectionsOverviewWithSpinner isLoading={areCollectionsLoaded} {...props} />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={(props) => (\n            <CollectionPageWithSpinner isLoading={!areCollectionsLoaded} {...props} />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  areCollectionsLoaded: selectAreCollectionsLoaded\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}