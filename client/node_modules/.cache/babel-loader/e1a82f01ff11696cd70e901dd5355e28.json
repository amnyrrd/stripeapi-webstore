{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user-types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/Firebase.utils';\nimport { signUpSuccess, signUpFailure, signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user-actions';\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SECTION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/aaronminyard/Development/code/2020-react-course/ecommerce-project/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signUpSuccess","signUpFailure","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUp","payload","email","password","displayName","user","createUserWithEmailAndPassword","additionalData","error","onSignUpStart","SIGN_UP_START","signInAfterSignUp","getSnapshotFromUserAuth","onSignUpSuccess","SIGN_UP_SUCCESS","userAuth","userRef","userSnapshot","get","id","data","signInWithGoogle","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SECTION","signOut","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,EAIEC,cAJF,QAKO,+BALP;AAMA,SACEC,aADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,cANF,QAOO,gBAPP;AASA,OAAO,UAAUC,MAAV,CAAiB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB;AAAX,CAAjB,EAAgE;AACrE,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMf,IAAI,CAACgB,8BAAL,CAAoCJ,KAApC,EAA2CC,QAA3C,CAAvB;AACA,UAAMjB,GAAG,CAACQ,aAAa,CAAC;AAAEW,MAAAA,IAAF;AAAQE,MAAAA,cAAc,EAAE;AAAEH,QAAAA;AAAF;AAAxB,KAAD,CAAd,CAAT;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACS,aAAa,CAACa,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,aAAV,GAA0B;AAC/B,QAAMxB,UAAU,CAACI,eAAe,CAACqB,aAAjB,EAAgCV,MAAhC,CAAhB;AACD;AAED,OAAO,UAAUW,iBAAV,CAA4B;AAAEV,EAAAA,OAAO,EAAE;AAAEI,IAAAA,IAAF;AAAQE,IAAAA;AAAR;AAAX,CAA5B,EAAkE;AACvE,QAAMK,uBAAuB,CAACP,IAAD,EAAOE,cAAP,CAA7B;AACD;AAED,OAAO,UAAUM,eAAV,GAA4B;AACjC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,eAAjB,EAAkCH,iBAAlC,CAAhB;AACD;AAED,OAAO,UAAUC,uBAAV,CAAkCG,QAAlC,EAA4CR,cAA5C,EAA4D;AACjE,MAAI;AACF,UAAMS,OAAO,GAAG,MAAM5B,IAAI,CAACI,yBAAD,EAA4BuB,QAA5B,EAAsCR,cAAtC,CAA1B;AACA,UAAMU,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhC,GAAG,CAACU,aAAa,CAAC;AAAEuB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOZ,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACW,aAAa,CAACW,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUa,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEhB,MAAAA;AAAF,QAAW,MAAMf,IAAI,CAACgC,eAAL,CAAqB/B,cAArB,CAAvB;AACA,UAAMqB,uBAAuB,CAACP,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACW,aAAa,CAACW,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUe,mBAAV,GAAgC;AACrC,QAAMtC,UAAU,CAACI,eAAe,CAACmC,oBAAjB,EAAuCH,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUI,eAAV,CAA0B;AAAExB,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAMf,IAAI,CAACoC,0BAAL,CAAgCxB,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMS,uBAAuB,CAACP,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACdtB,IAAAA,GAAG,CAACW,aAAa,CAACW,KAAD,CAAd,CAAH;AACD;AACF;AAED,OAAO,UAAUmB,kBAAV,GAA+B;AACpC,QAAM1C,UAAU,CAACI,eAAe,CAACuC,mBAAjB,EAAsCH,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUI,mBAAV,GAAgC;AACrC,MAAI;AACF,UAAMd,QAAQ,GAAG,MAAMtB,cAAc,EAArC;AACA,QAAI,CAACsB,QAAL,EAAe;AACf,UAAMH,uBAAuB,CAACG,QAAD,CAA7B;AACD,GAJD,CAIE,OAAOP,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACW,aAAa,CAACW,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUsB,kBAAV,GAA+B;AACpC,QAAM7C,UAAU,CAACI,eAAe,CAAC0C,kBAAjB,EAAqCF,mBAArC,CAAhB;AACD;AAED,OAAO,UAAUG,OAAV,GAAoB;AACzB,MAAI;AACF,UAAM1C,IAAI,CAAC0C,OAAL,EAAN;AACA,UAAM9C,GAAG,CAACY,cAAc,EAAf,CAAT;AACD,GAHD,CAGE,OAAOU,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACa,cAAc,CAACS,KAAD,CAAf,CAAT;AACD;AACF;AAED,OAAO,UAAUyB,cAAV,GAA2B;AAChC,QAAMhD,UAAU,CAACI,eAAe,CAAC6C,cAAjB,EAAiCF,OAAjC,CAAhB;AACD;AAED,OAAO,UAAUG,SAAV,GAAsB;AAC3B,QAAMhD,GAAG,CAAC,CACRC,IAAI,CAACmC,mBAAD,CADI,EAERnC,IAAI,CAACuC,kBAAD,CAFI,EAGRvC,IAAI,CAAC0C,kBAAD,CAHI,EAIR1C,IAAI,CAAC6C,cAAD,CAJI,CAAD,CAAT;AAMD","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user-types';\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from '../../firebase/Firebase.utils';\nimport {\n  signUpSuccess,\n  signUpFailure,\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n} from './user-actions';\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp)\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData }}) {\n  yield getSnapshotFromUserAuth(user, additionalData)\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SECTION, isUserAuthenticated);\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}